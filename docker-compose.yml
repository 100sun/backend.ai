version: "3"

services:

  backendai-manager:
    container_name: backendai-local-manager
    build:
      context: docker/manager
      args:
        branch: "master"
    networks:
      - full
    ports:
      - 8081:8081
    environment:
      - BACKEND_DEBUG=yes
      - BACKEND_NAMESPACE=local
      - BACKEND_ETCD_ADDR=backendai-etcd:2379
      - BACKEND_REDIS_ADDR=backendai-redis:6379
      - BACKEND_DB_ADDR=backendai-db:5432
      - BACKEND_DB_NAME=backend
      - BACKEND_DB_USER=postgres
      - BACKEND_DB_PASSWORD=develove
      - BACKEND_SERVICE_IP=0.0.0.0
      - BACKEND_SERVICE_PORT=8081
      - BACKEND_ADVERTISED_MANAGER_HOST=backendai-manager
    volumes:
      - "./docker/manager/init.sh:/app/init.sh:ro"
    depends_on:
      - backendai-etcd
      - backendai-db
      - backendai-redis
    command: ["sh", "/app/init.sh"]

  backendai-agent:
    container_name: backendai-local-agent
    build:
      context: docker/agent
      args:
        branch: "master"
    volumes:
      # Allow access to the host Docker server
      # WARNING: this is INSECURE in production deployment!
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    networks:
      - full
    environment:
      - BACKEND_DEBUG=yes
      - BACKEND_NAMESPACE=local
      - BACKEND_ETCD_ADDR=backendai-etcd:2379
      - BACKEND_AGENT_HOST_OVERRIDE=backendai-agent            # advertise my linked hostname
      - BACKEND_KERNEL_HOST_OVERRIDE=docker.for.mac.host.internal  # use the host's hostname
    depends_on:
      - backendai-etcd
      - backendai-manager

  backendai-db:
    container_name: backendai-local-db
    image: postgres:9.6-alpine
    networks:
      - full
    environment:
      - POSTGRES_PASSWORD=develove
      - POSTGRES_DB=backend

  backendai-redis:
    container_name: backendai-local-redis
    image: redis:latest
    networks:
      - full

  backendai-etcd:
    container_name: backendai-local-etcd
    image: quay.io/coreos/etcd:v3.2.15
    volumes:
      - /tmp/backend.ai/etcd-data:/etcd-data
    networks:
      - full
    command: >
      /usr/local/bin/etcd
      --name backendai-etcd
      --data-dir /etcd-data
      --listen-client-urls http://0.0.0.0:2379
      --advertise-client-urls http://0.0.0.0:2379
      --listen-peer-urls http://0.0.0.0:2380
      --initial-advertise-peer-urls http://0.0.0.0:2380
      --initial-cluster backendai-etcd=http://0.0.0.0:2380
      --initial-cluster-token backendai-etcd-token
      --initial-cluster-state new
      --auto-compaction-retention 1

networks:
  full:
